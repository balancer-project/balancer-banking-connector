openapi: 3.0.3
info:
  title: Balancer Banking Connector
  version: 0.0.1
servers:
  - url: http://localhost:49162
    description: Local server
tags:
  - name: Bank Link
  - name: Bank Link Webhook
paths:
  /v1/bank-link/create-link-token:
    post:
      operationId: createLinkToken
      tags:
        - Bank Link
      summary: Creates a Link token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  description: The id of the Balancer user for which to create the token
      responses:
        '201':
          $ref: '#/components/responses/CreateLinkTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /v1/bank-link/set-public-token:
    post:
      operationId: setPublicToken
      tags:
        - Bank Link
      summary: Sets a public token returned by Link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  description: The id of the Balancer user for which the token was created
                institutionId:
                  type: string
                  description: The id of the institution associated with the token
                publicToken:
                  type: string
                  description: The public token returned by Link
      responses:
        '204':
          description: The public token was set successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /v1/bank-link/notify-update:
    post:
      operationId: notifyUpdate
      tags:
        - Bank Link Webhook
      summary: Notifies the connector of a banking information update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyUpdateRequestBody'
      responses:
        '200':
          description: The notification was received
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  schemas:
    Error:
      type: object
      description: A Problem Details Object
      properties:
        code:
          type: string
          description: Error code
        description:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem
    NotifyUpdateRequestBody:
      type: object
      description: The body of a notify update request
      required:
        - webhook_type
        - webhook_code
        - item_id
        - environment
      properties:
        webhook_type:
          type: string
          description: The type of webhook
          example: TRANSACTIONS
        webhook_code:
          type: string
          description: The code of the webhook
          example: INITIAL_UPDATE
        item_id:
          type: string
          description: The id of the Item the webhook relates to
          example: wz666MBjYWTp2PDzzggYhM6oWWmBb
        environment:
          type: string
          description: The environment of the webhook
          example: production
        initial_update_complete:
          type: boolean
          description: |
            Indicates if initial pull information is available, present in the SYNC_UPDATES_AVAILABLE webhook
          example: true
        historical_update_complete:
          type: boolean
          description: |
            Indicates if historical pull information is available, present in the SYNC_UPDATES_AVAILABLE webhook
          example: true
        account_ids:
          type: array
          description: |
            A list of account ids for accounts that have new or updated recurring transactions data, present in the
            RECURRING_TRANSACTIONS_UPDATE webhook
          items:
            type: string
        error:
          oneOf:
            - type: string
              description: |
                The error code associated with the webhook, present in the INITIAL_UPDATE webhook
            - type: object
              description: |
                The error object associated with the webhook, present in the HISTORICAL_UPDATE, DEFAULT_UPDATE,
                DEFAULT_UPDATE and TRANSACTIONS_REMOVED webhooks
              additionalProperties: true
        new_transactions:
          type: integer
          description: |
            The number of new, unfetched transactions available, present in the INITIAL_UPDATE and HISTORICAL_UPDATE
            webhooks
        removed_transactions:
          type: array
          description: |
            A list of transaction ids corresponding to the removed transactions, present in the TRANSACTIONS_REMOVED
            webhook
          items:
            type: string
  responses:
    CreateLinkTokenResponse:
      description: A response containing a newly created Link token
      content:
        application/json:
          schema:
            type: object
            properties:
              linkToken:
                type: string
                description: The newly created Link token
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
